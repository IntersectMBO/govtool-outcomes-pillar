FROM node:20.18.1-alpine  AS base

RUN apk add --no-cache git bash

ARG CARDANO_NETWORK=preview

ENV CARDANO_NETWORK=${CARDANO_NETWORK}

WORKDIR /app

RUN git clone https://github.com/IntersectMBO/govtool.git /app

WORKDIR /app/govtool/frontend

RUN yarn install

RUN rm -rf /app/govtool/frontend/node_modules/@intersect.mbo/govtool-outcomes-pillar-ui/dist

COPY ./ui/dist /app/govtool/frontend/ui/dist

# Conditionally install the package or copy UI files
RUN if [ "$CARDANO_NETWORK" = "mainnet" ]; then \
    echo "Installing latest @intersect.mbo/govtool-outcomes-pillar-ui via yarn..."; \
    yarn cache clean; \
    yarn add @intersect.mbo/govtool-outcomes-pillar-ui@latest; \
    else \
    echo "Copying UI files for non-mainnet environment..."; \
    cp -r /app/govtool/frontend/ui/dist /app/govtool/frontend/node_modules/@intersect.mbo/govtool-outcomes-pillar-ui/dist; \
    fi

# Copy environment variables and build the project
RUN cp .env.example .env

RUN if [ "$CARDANO_NETWORK" = "mainnet" ]; then \
    sed -i 's/^VITE_NETWORK_FLAG=.*/VITE_NETWORK_FLAG=1/' .env; \
    cat .env; \
    else \
    sed -i 's/^VITE_NETWORK_FLAG=.*/VITE_NETWORK_FLAG=0/' .env; \
    cat .env; \
    fi

RUN yarn build

# ---- Production Stage ----
FROM node:20.18.1-alpine AS production

# Set working directory
WORKDIR /app

RUN npm install -g serve

# Copy built frontend from base stage
COPY --from=base /app/govtool/frontend/dist /app/public

EXPOSE 80
CMD ["serve", "-s", "public", "-l", "80"]